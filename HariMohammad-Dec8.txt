1. Focus on one or two big takeaways: packet transactions and maybe atoms.
2. Mohammad: need to evaluate only stateful atoms, not stateless ones for feasibility.
3. Maybe the paper is a case study of both the atoms and packet transactions, not either or.
4. Hari: Make a table illustrating differences between us and prior abstract machine models.
5. One paragraph on why line-rate or nothing is a good programming model.
6. George and others: One table illustrating differences between us and prior compiler techniques.
Hari wasn't sure if this would or wouldn't make sense to a SIGCOMM audience.
So I need to run it by him first to make sure it makes sense to him first.
I think I can explain why:
--> software pipelining and
--> technology mapping are different from prior work,
--> it's a little harder to do the same for if conversion and SSA.
Don't say stuff like the synthesis of techniques is novel.

90 references is overwhelming. Clearly say how we are different from prior art.
Focus a bit more on the usability and performance of packet transactions
and less on the compiler techniques.
