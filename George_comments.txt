Paper eval looks weak:
---------------------------
1. Experimental section is very weak relative to a typical NSDI paper.
2. What is the significance of this? Should be brought out better.
3. Why was this hard? Make it clear why it was new even for a compiler.
4. We should add compile times and number of stages to the table.

Not hyper important:
---------------------------------------
Relate this to the past i.e. RMT.
Connect this to RMT.
We have this new atom abstraction.
Show that RMT at that time couldn't do stateful processing.

Give some qualitative understanding of what it takes:
-------------------------------------------------
As you go up the complexity hierarchy, how does the timing go up?
You are losing timing?
Get some sense of gate delays and give a qualitative argument.

CoDel:
------------------------------------------------
--> Can you prove that it doesn't map
(provisos i.e modulo the optimizations)

--> Add one more row using CoDel as an example of something you cannot do.

--> Good segueway into approximations.


Adding a little more weight to the evaluation:
---------------------------------------------------
1. Can you add the three-operand codes by linking to a website?
2. Number of stages that everybody required.
3. Report the compilation times.
4. Change the perception from a theoretical paper to experimental one.
5. You start with all these real architectures, and then it ends up looking
like a theoretical one.
6. As long as the stateful operations can be overlaid over the existing IP.
Sum of regular packet processing + number of stages < 32.

Little bits of reality checking at the end to give insights.

Exposition:
-----------------------
1. github id: George says we can shorten by two pages.

Lavanya's paper:
-------------------

Mention this all in related work:
----------------------------------------
Domino vs. P4: stateful vs. stateless processing.
Domino vs. P4: code generation vs. no code generation.
Domino vs. P4: They do table spreading we don't.
Per-flow tables might make stateful processing hard as well. 
